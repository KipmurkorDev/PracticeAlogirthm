const express = require('express');
const app = express();
const server = require('http').Server(app);
const io = require('socket.io')(server);

app.get('/', (req, res) => {
  res.sendFile('index.html');
});

io.on('connection', (socket) => {
  socket.on('message', (messageText) => {
    socket.broadcast.emit('message', messageText)
  })
});

server.listen(1337);
When a client connected via websocket sends a message, will it receive its own message in return via its channel?
(Choose the statement that is right with this code)



No, because in any case the server considers itself that a client who sends a message does not need to receive it again.



Yes, because this server broadcasts the received message to all connected clients.



No, because this server returns the message to all clients except the sender.



Yes, because in any case the server systematically sends back a response to all clients connected at time T.

What is the main difference between setImmediate and process.nextTick?

